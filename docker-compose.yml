services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-drivecore}
      POSTGRES_USER: ${POSTGRES_USER:-drivecore}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-drivecore}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-drivecore} -d ${POSTGRES_DB:-drivecore}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build: ./backend
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-drivecore}
      - POSTGRES_USER=${POSTGRES_USER:-drivecore}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-drivecore}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - DEBUG=${DEBUG:-True}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - TZ=${TZ:-Europe/Moscow}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  celery-worker:
    build: ./backend
    command: celery -A app.workers.celery worker --loglevel=info
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-drivecore}
      - POSTGRES_USER=${POSTGRES_USER:-drivecore}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-drivecore}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - DEBUG=${DEBUG:-True}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - TZ=${TZ:-Europe/Moscow}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  celery-beat:
    build: ./backend
    command: celery -A app.workers.celery beat --loglevel=info
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-drivecore}
      - POSTGRES_USER=${POSTGRES_USER:-drivecore}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-drivecore}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - DEBUG=${DEBUG:-True}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - TZ=${TZ:-Europe/Moscow}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  flower:
    build: ./backend
    command: celery -A app.workers.celery flower --port=5555
    ports:
      - "${FLOWER_PORT:-5555}:5555"
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - TZ=${TZ:-Europe/Moscow}
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build: ./frontend
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
